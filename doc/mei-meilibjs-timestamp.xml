<!-- <?xml-model href="tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?> -->
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Music Encoding Initiative Guidelines: <title type="sub">Customization for meiLib.js</title></title>
      </titleStmt>
      <publicationStmt>
        <p/>
      </publicationStmt>
      <sourceDesc>
        <p/>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <schemaSpec ident="mei" ns="http://www.music-encoding.org/ns/mei" start="mei meiHead meiCorpus
        music score">
        <moduleRef key="MEI"/>
        <moduleRef key="MEI.shared"/>
        <moduleRef key="MEI.header"/>
        <moduleRef key="MEI.cmn"/>
        <!-- Disable mensural and neume modules -->
        <!--<moduleRef key="MEI.mensural"/> -->
        <!--<moduleRef key="MEI.neumes"/>-->
        <!-- <moduleRef key="MEI.analysis"/> -->
        <!-- <moduleRef key="MEI.cmnOrnaments"/> -->
        <!-- <moduleRef key="MEI.corpus"/> -->
        <!-- <moduleRef key="MEI.critapp"/> -->
        <!-- <moduleRef key="MEI.edittrans"/> -->
        <!-- <moduleRef key="MEI.facsimile"/> -->
        <!-- <moduleRef key="MEI.figtable"/> -->
        <!-- <moduleRef key="MEI.frbr"/> -->
        <!-- <moduleRef key="MEI.harmony"/> -->
        <moduleRef key="MEI.linkalign"/>
        <moduleRef key="MEI.lyrics"/>
        <!-- <moduleRef key="MEI.midi"/> -->
        <!-- <moduleRef key="MEI.namesdates"/> -->
        <!-- <moduleRef key="MEI.performance"/> -->
        <moduleRef key="MEI.ptrref"/>
        <!-- <moduleRef key="MEI.tablature"/> -->
        <moduleRef key="MEI.text"/>
        <!-- <moduleRef key="MEI.usersymbols"/> -->

        <!-- Disable mensural- and neume-specific model classes in the shared module -->
        <classSpec ident="model.scorePart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.sectionPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.staffPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        <classSpec ident="model.layerPart.mensuralAndNeumes" module="MEI.shared" type="model"
          mode="delete"/>
        
        <!-- (clef shape isn't important) -->

        <!-- TODO: meter change only between measures! -->

        <!-- @dur of note, rest, space must be defined! -->
        <classSpec ident="att.duration.musical.req" module="MEI.shared" type="atts" mode="add">
          <desc>Required attributes that express duration in musical terms.</desc>
          <attList>
            <attDef ident="dur" usage="req">
              <desc>records the duration of a feature using the relative durational values provided by
                the data.DURATION datatype.</desc>
              <datatype>
                <rng:ref name="data.DURATION"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <classSpec ident="att.note.log" module="MEI.shared" type="atts" mode="change">
          <classes mode="replace">
            <memberOf key="att.event"/>
            <memberOf key="att.accidental"/>
            <memberOf key="att.articulation"/>
            <memberOf key="att.augmentdots"/>
            <memberOf key="att.duration.musical.req"/>
            <memberOf key="att.fermatapresent"/>
            <memberOf key="att.pitched"/>
            <memberOf key="att.syltext"/>
            <memberOf key="att.slurpresent"/>
            <memberOf key="att.tiepresent"/>
            <memberOf key="att.tupletpresent"/>
            <memberOf key="att.note.log.cmn"/>
            <memberOf key="att.note.log.mensural"/>
          </classes>
        </classSpec>

        <classSpec ident="att.rest.log" module="MEI.shared" type="atts" mode="change">
          <classes>
            <memberOf key="att.augmentdots"/>
            <memberOf key="att.event"/>
            <memberOf key="att.duration.musical.req"/>
            <memberOf key="att.fermatapresent"/>
            <memberOf key="att.tupletpresent"/>
            <memberOf key="att.rest.log.cmn"/>
          </classes>
        </classSpec>

        <!-- TODO: duration of chord should be well-defined! -->
        
        <classSpec ident="model.meilibjs.eventLike" mode="add" module="MEI.cmn" type="model">
          <desc>groups event elements what MeiLib.js can accept when converting between timestamps and xml:id values</desc>
        </classSpec>
        
        <classSpec ident="model.meilibjs.simpleEventLike" mode="add" module="MEI.cmn" type="model">
          <desc>groups event elements with atomic duration value</desc>
          <classes>
            <memberOf key="model.meilibjs.eventLike"/>
          </classes>
        </classSpec>
        
        <elementSpec ident="note" module="MEI.shared" mode="change">
          <classes mode="change">
            <memberOf key="model.meilibjs.simpleEventLike"/>
          </classes>
        </elementSpec>
        <elementSpec ident="rest" module="MEI.shared" mode="change">
          <classes mode="change">
            <memberOf key="model.meilibjs.simpleEventLike"/>
          </classes>
        </elementSpec>
        <elementSpec ident="space" module="MEI.shared" mode="change">
          <classes mode="change">
            <memberOf key="model.meilibjs.simpleEventLike"/>
          </classes>
        </elementSpec>
        <elementSpec ident="mRest" module="MEI.cmn" mode="change">
          <classes mode="change">
            <memberOf key="model.meilibjs.eventLike"/>
          </classes>
        </elementSpec>
        <elementSpec ident="chord" module="MEI.shared" mode="change">
          <classes mode="change">
            <memberOf key="model.meilibjs.simpleEventLike"/>
          </classes>
        </elementSpec>
        
        <!-- children of beam can only be note, rest, space or chord -->
        <elementSpec ident="beam" module="MEI.cmn" mode="change">
          <desc>A container for a series of explicitly beamed events that begins and ends entirely
            within a measure. In order to convert 
            xml:id and timestamp values there and back, MeiLib can only accept certain elements under beam.
            <!-- For beams that cross the bar line, use the beamSpan element.
            Secondary beams may be broken explicitly using the breaksec attribute on the notes or chords
            under the beam. Automated beaming, as opposed to explicitly marked beams, may be indicated
            for an entire score, part or section by using the beam.group and beam.rests attributes on
            these elements. --></desc>
          <classes mode="change">
            <memberOf key="model.meilibjs.eventLike"/>
          </classes>
          <content mode="replace">
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.meilibjs.simpleEventLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>
        
        <!-- children of layer can only be note, rest, space, mRest, chord or beam -->
        <elementSpec ident="layer" module="MEI.shared" mode="change">
          <desc mode="change">An independent stream of events on a staff. In order to convert 
            xml:id and timestamp values there and back, MeiLib.js can only accept certain elements under layer.
            <!-- The term 'layer' is used instead of
            'voice' in order to avoid confusion between 'voice' and 'voice leading'. The def attribute
            may be used to create a connection with a layerDef element where logical and visual
            information about the layer is recorded. Alternatively, the n attribute may be used as a
            reference to a layerDef element with the same value in its n attribute. If neither def nor n
            attributes are present, then encoding order of the layers is presumed to match the encoding
            order of the layer definitions.--></desc>
          <content mode="replace">
            <rng:zeroOrMore>
                <rng:ref name="model.meilibjs.eventLike"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>
        
      </schemaSpec>
    </body>
  </text>
</TEI>
